from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Textos base (como si fueran documentos)
documentos = [
    "Gu√≠a para entrenar una red neuronal desde cero.",
    "Recetas saludables con inteligencia artificial.",
    "Historia y evoluci√≥n del machine learning.",
    "C√≥mo construir un modelo de IA paso a paso.",
    "Aplicaciones del deep learning en medicina."
]

# Crear vectorizador
vectorizador = TfidfVectorizer()

# Convertir documentos a embeddings
emb_docs = vectorizador.fit_transform(documentos)

# Texto de b√∫squeda (input del usuario)
consulta = input("üîç Escribe una palabra o frase: ")

# Convertir consulta a embedding
emb_consulta = vectorizador.transform([consulta])

# Calcular similitud entre consulta y documentos
similitudes = cosine_similarity(emb_consulta, emb_docs)[0]

# Obtener el √≠ndice del documento m√°s parecido
idx_mas_similar = similitudes.argmax()

#Imprimir la matriz
print(similitudes)

# Mostrar resultado
print("\n‚úÖ Documento m√°s parecido:")
print(f"‚Üí {documentos[idx_mas_similar]}")
print(f"(Similitud: {similitudes[idx_mas_similar]:.2f})")

